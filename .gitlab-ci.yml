image: docker:20.10.17-dind
variables:
    DOCKER_TLS_CERTDIR: "/certs"
services:
  - name: docker:20.10.17-dind
    alias: docker
stages:
  - build
  - test
  - deploy review

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - my_cash/

core dev build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo $CI_REGISTRY
    - echo $CI_REGISTRY_USER
    - echo $CI_REGISTRY_PASSWORD
    - cp $API_PG_SSLROOTCERT_DATA ./backend/src/postgres_ssl.crt
    - cp $DEV_GOOGLE_CRED ./backend/src/credentials.json
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context .
      --dockerfile ./docker/backend/Dockerfile
      --destination $CI_REGISTRY_IMAGE/core:$CI_COMMIT_SHA
      --use-new-run=true
  tags:
    - group-docker-build-runner

  only:
    - develop

core dev deploy:
  stage: deploy review
  script:
    - echo "Deploy review -core"
    - echo $CI_REGISTRY
    - echo $CI_REGISTRY_USER
    - echo $CI_REGISTRY_PASSWORD
    - cp $DEV_BACK_ENV .env.local
    - docker info
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker pull $CI_REGISTRY_IMAGE/core:$CI_COMMIT_SHA
    - docker-compose -f docker-compose-dev.yml up -d
    - docker-compose -f docker-compose-dev.yml exec -T auditor-v2-api sh -c "python src/manage.py showmigrations"
    - docker-compose -f docker-compose-dev.yml exec -T auditor-v2-api sh -c "python src/manage.py migrate --noinput"
    - docker-compose -f docker-compose-dev.yml exec -T auditor-v2-api sh -c "python src/manage.py collectstatic --noinput"
    - docker restart main_nginx
    - echo 'y' | docker system prune
  tags:
    - top-runner-shell
  only:
    - develop

core prod build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  when: manual
  script:
    - mkdir -p /kaniko/.docker
    - echo $CI_REGISTRY
    - echo $CI_REGISTRY_USER
    - echo $CI_REGISTRY_PASSWORD
    - cp $DEV_GOOGLE_CRED ./backend/src/credentials.json
    - cp $API_PG_SSLROOTCERT_DATA ./backend/src/postgres_ssl.crt
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context .
      --dockerfile ./docker/backend/Dockerfile
      --destination $CI_REGISTRY_IMAGE/prod/core:$CI_COMMIT_SHA
      --use-new-run=true
  tags:
    - group-docker-build-runner

  only:
    - main

core prod deploy:
  stage: deploy review
  script:
    - echo "Deploy review auditor-v2-core"
    - echo $CI_REGISTRY
    - echo $CI_REGISTRY_USER
    - echo $CI_REGISTRY_PASSWORD
    - cp $PROD_BACK_ENV .env.local
    - docker info
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker pull $CI_REGISTRY_IMAGE/prod/core:$CI_COMMIT_SHA
    - docker-compose -f docker-compose-prod.yml up -d
    - docker-compose -f docker-compose-prod.yml exec -T auditor-v2-api sh -c "python src/manage.py showmigrations"
    - docker-compose -f docker-compose-prod.yml exec -T auditor-v2-api sh -c "python src/manage.py migrate --noinput"
    - docker-compose -f docker-compose-prod.yml exec -T auditor-v2-api sh -c "python src/manage.py collectstatic --noinput"
    - docker restart server-a-nginx
    - echo 'y' | docker system prune
  when: manual
  tags:
    - server-a-shell
  only:
    - main
