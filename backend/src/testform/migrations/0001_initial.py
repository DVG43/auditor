# Generated by Django 3.2 on 2023-04-13 11:29

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('folders', '0002_auto_20230227_1507'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TestForm',
            fields=[
                ('name', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, max_length=1000, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('last_modified_user', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Last modified by')),
                ('last_modified_date', models.DateTimeField(auto_now=True, verbose_name='Last modified at')),
                ('deleted_id', models.UUIDField(null=True, verbose_name='Deleted id')),
                ('deleted_since', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('tag_color', models.CharField(blank=True, default='', max_length=20, verbose_name='Plate color')),
                ('data_row_order', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True), blank=True, default=list, size=None, verbose_name='Data row order')),
                ('col_order', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True), blank=True, default=list, size=None, verbose_name='Column order')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('time_to_answer', models.PositiveIntegerField(default=120, verbose_name='время для прохождения')),
                ('last_open', models.DateTimeField(auto_now_add=True, null=True)),
                ('document_logo', models.ImageField(blank=True, null=True, upload_to=utils.get_doc_upload_path, verbose_name='Document logo')),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testforms', to='folders.folder', verbose_name='Folder')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name_plural': 'testforms',
                'db_table': 'testform',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='TestFormQuestion',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_type', models.CharField(choices=[('BaseTFQuestion', 'общий'), ('FinalTFQuestion', 'завершающий экран')], default='BaseTFQuestion', max_length=100, verbose_name='тип вопроса')),
                ('caption', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='текст вопроса')),
                ('description', models.CharField(blank=True, max_length=512, null=True, verbose_name='описание вопроса')),
                ('require', models.BooleanField(default=True)),
                ('testform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testform.testform')),
            ],
            options={
                'verbose_name_plural': 'testform_questions',
                'db_table': 'testform_question',
            },
        ),
        migrations.CreateModel(
            name='TFQuestionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.PositiveIntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('testform_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testform.testformquestion')),
            ],
            options={
                'verbose_name_plural': 'tf_question_types',
                'db_table': 'tf_question_type',
            },
        ),
        migrations.CreateModel(
            name='BaseTFQuestion',
            fields=[
                ('tfquestiontype_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='testform.tfquestiontype')),
                ('type_answer', models.CharField(blank=True, choices=[('text', 'text'), ('video', 'video')], default='text', max_length=10, null=True)),
                ('max_time', models.PositiveIntegerField(blank=True, default=120, null=True)),
            ],
            bases=('testform.tfquestiontype',),
        ),
        migrations.CreateModel(
            name='FinalTFQuestion',
            fields=[
                ('tfquestiontype_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='testform.tfquestiontype')),
                ('answer', models.CharField(blank=True, max_length=250, null=True)),
            ],
            bases=('testform.tfquestiontype',),
        ),
        migrations.AddIndex(
            model_name='tfquestiontype',
            index=models.Index(fields=['testform_question'], name='tf_question_testfor_988f86_idx'),
        ),
        migrations.AddIndex(
            model_name='testformquestion',
            index=models.Index(fields=['testform'], name='testform_qu_testfor_e8edc3_idx'),
        ),
        migrations.AddIndex(
            model_name='testform',
            index=models.Index(fields=['owner'], name='testform_owner_i_d4750d_idx'),
        ),
    ]
