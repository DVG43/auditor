# Generated by Django 3.2 on 2023-02-22 13:29

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields
import poll.fields
import poll.models.polltheme
import poll.models.questions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0032_auto_20230214_1208'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('folders', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FreeAnswerAttachedType',
            fields=[
                ('attached_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, default=None, max_length=16, null=True)),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ItemQuestion',
            fields=[
                ('item_question_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.IntegerField(default=0)),
                ('text', models.TextField(blank=True, default='', null=True)),
                ('checked', models.BooleanField(default=False)),
                ('photo_path', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('points', models.IntegerField(blank=True, null=True)),
                ('selected', models.BooleanField(default=False)),
                ('userAnswer', models.BooleanField(default=False)),
                ('userAnswerText', models.TextField(default='')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'poll_item_questions',
                'db_table': 'poll_question_item',
                'ordering': ['order_id', '-updated_at'],
            },
            bases=(models.Model, poll.models.questions.ItemBase),
        ),
        migrations.CreateModel(
            name='ItemTagsFreeAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ManyFromListAttachedType',
            fields=[
                ('attached_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, default=None, max_length=16, null=True)),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MediaAttachedType',
            fields=[
                ('media_attached_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, default=None, max_length=16, null=True)),
                ('active', models.BooleanField(default=False)),
                ('count', models.PositiveIntegerField(default=0)),
                ('duration', models.IntegerField(blank=True, default=None, null=True)),
                ('symbols', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('size', models.PositiveIntegerField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name_plural': 'poll_media_attached_types',
                'db_table': 'poll_media_attached_type',
            },
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('file_id', models.IntegerField(primary_key=True, serialize=False)),
                ('path_to_file', models.CharField(max_length=2048)),
            ],
            options={
                'verbose_name_plural': 'poll_media_files',
                'db_table': 'poll_media_file',
            },
        ),
        migrations.CreateModel(
            name='MediaItemQuestion',
            fields=[
                ('media_question_id', models.AutoField(primary_key=True, serialize=False)),
                ('points', models.PositiveIntegerField(blank=True, default=0, null=None, validators=[django.core.validators.MaxValueValidator(limit_value=100)])),
            ],
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('name', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, max_length=1000, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('last_modified_user', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Last modified by')),
                ('last_modified_date', models.DateTimeField(auto_now=True, verbose_name='Last modified at')),
                ('deleted_id', models.UUIDField(null=True, verbose_name='Deleted id')),
                ('deleted_since', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('tag_color', models.CharField(blank=True, default='', max_length=20, verbose_name='Plate color')),
                ('data_row_order', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True), blank=True, default=list, size=None, verbose_name='Data row order')),
                ('col_order', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True), blank=True, default=list, size=None, verbose_name='Column order')),
                ('poll_id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.CharField(default='', max_length=200)),
                ('test_mode_global', models.BooleanField(default=False)),
                ('count_answers', models.PositiveIntegerField(default=0)),
                ('last_open', models.DateTimeField(auto_now_add=True, null=True)),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polls', to='folders.folder', verbose_name='Folder')),
                ('host_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='polls', to='projects.project')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name_plural': 'polls',
                'db_table': 'poll',
                'ordering': ['-poll_id'],
            },
        ),
        migrations.CreateModel(
            name='PollTags',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='tag', max_length=32)),
            ],
            options={
                'verbose_name_plural': 'polls_tags',
                'db_table': 'poll_tags',
            },
        ),
        migrations.CreateModel(
            name='SurveyPassing',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sex', models.CharField(blank=True, default=None, max_length=6, null=True)),
                ('platform', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('age', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('user_name', models.CharField(default='Anonymous', max_length=100)),
                ('survey_title', models.CharField(default='Untitled', max_length=255)),
                ('status', models.CharField(default='new', max_length=10)),
                ('questions', jsonfield.fields.JSONField(blank=True, default=None, null=True)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poll.poll')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'poll_surveypassings',
                'db_table': 'poll_surveypassing',
            },
        ),
        migrations.CreateModel(
            name='TagsFreeAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='YesNoAnswers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('textAnswer', models.TextField(blank=True, default='')),
                ('checked', models.BooleanField(default=False)),
                ('points', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'db_table': 'one_from_answer',
            },
        ),
        migrations.CreateModel(
            name='YesNoAttachedType',
            fields=[
                ('attached_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, default=None, max_length=16, null=True)),
                ('active', models.BooleanField(default=False)),
                ('count', models.PositiveIntegerField(default=0)),
                ('duration', models.IntegerField(blank=True, default=None, null=True)),
                ('symbols', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('size', models.PositiveIntegerField(blank=True, default=None, null=True)),
            ],
            options={
                'db_table': 'poll_one_from_list_attached_type',
            },
        ),
        migrations.CreateModel(
            name='PollSettings',
            fields=[
                ('poll', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='setting', serialize=False, to='poll.poll')),
                ('isFormActive', models.BooleanField(default=True)),
                ('mixQuestions', models.BooleanField(default=False)),
                ('allowRefillingForm', models.BooleanField(default=True)),
                ('groupsForRefilling', jsonfield.fields.JSONField(blank=True, default=[], null=True)),
                ('groupsForOnlyOneFilling', jsonfield.fields.JSONField(blank=True, default=[], null=True)),
                ('usePassword', models.BooleanField(default=False)),
                ('formPassword', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('useAnswersCountRestriction', models.BooleanField(default=False)),
                ('maxAnswers', models.CharField(blank=True, default='0', max_length=80, null=True)),
                ('useAnswersTimeRestriction', models.CharField(default='', max_length=12)),
                ('maxTimeRange', jsonfield.fields.JSONField(blank=True, default=['', ''], null=True)),
                ('isRedirectActive', models.BooleanField(default=False)),
                ('redirectMethod', models.CharField(default='', max_length=128)),
                ('redirectPath', models.CharField(default='', max_length=128)),
                ('askLocation', models.BooleanField(default=False)),
                ('activeCaptcha', models.BooleanField(default=False)),
                ('useSignature', models.BooleanField(default=False)),
                ('reopenForm', models.BooleanField(default=False)),
                ('reopenDelay', models.CharField(default='90', max_length=80)),
                ('formInactiveMessage', models.CharField(default='', max_length=200)),
                ('language', models.CharField(default='', max_length=20)),
                ('externalapi', models.CharField(blank=True, max_length=200, null=True)),
                ('externalapiparams', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name_plural': 'polls_settings',
                'db_table': 'poll_settings',
            },
        ),
        migrations.CreateModel(
            name='YesNoQuestion',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_type', models.CharField(default='Question', max_length=100)),
                ('order_id', models.IntegerField(default=0)),
                ('description', models.CharField(max_length=512)),
                ('caption', models.CharField(max_length=255)),
                ('require', models.BooleanField(default=False)),
                ('mix_answers', models.BooleanField(default=False)),
                ('time_for_answer', models.BooleanField(default=False)),
                ('type_for_show', models.IntegerField(default=0)),
                ('title_image', models.CharField(default='', max_length=512)),
                ('resize_image', models.BooleanField(default=False)),
                ('test_mode', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('description_mode', models.BooleanField(default=False)),
                ('max_video_duration', models.IntegerField(default=0)),
                ('is_video', models.BooleanField(default=False)),
                ('attached_type', models.ManyToManyField(to='poll.YesNoAttachedType')),
                ('items', models.ManyToManyField(to='poll.ItemQuestion')),
                ('poll', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='poll.poll')),
                ('yes_no_answers', models.ManyToManyField(to='poll.YesNoAnswers')),
            ],
            options={
                'verbose_name_plural': 'poll_one_from_list',
            },
        ),
        migrations.CreateModel(
            name='UserAnswerQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_id', models.IntegerField()),
                ('text', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('poll_id', models.IntegerField(default=None, null=True)),
                ('items_question', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None), blank=True, null=True, size=None)),
                ('event', models.CharField(choices=[('NEW', 'New'), ('STARTED', 'Started'), ('INPROGRESS', 'In progress'), ('COMPLETED', 'Completed')], default='new', max_length=15)),
                ('during', models.IntegerField(blank=True, default=1, null=True)),
                ('another_answer', models.CharField(blank=True, default=None, max_length=1500, null=True)),
                ('video_answer', poll.fields.SimpleJsonField(blank=True, default=None, null=True)),
                ('accepted', models.BooleanField(default=False)),
                ('points', models.IntegerField(default=0)),
                ('question_type', models.CharField(blank=True, max_length=100, null=True)),
                ('photo_answer', poll.fields.SimpleJsonField(blank=True, default=None, null=True)),
                ('audio_answer', poll.fields.SimpleJsonField(blank=True, default=None, null=True)),
                ('file_answer', poll.fields.SimpleJsonField(blank=True, default=None, null=True)),
                ('text_answer', poll.fields.SimpleJsonField(blank=True, default=None, null=True)),
                ('yes_no_answers_id', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), blank=True, null=True, size=None)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poll.surveypassing')),
            ],
            options={
                'verbose_name_plural': 'poll_user_answers',
                'db_table': 'poll_user_answers',
            },
        ),
        migrations.CreateModel(
            name='UserAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('redactor', 'Redactor'), ('view_responses', 'view_responses'), ('author', 'Author')], max_length=80)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_access', to='poll.poll')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poll_access', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_poll_access',
            },
        ),
        migrations.CreateModel(
            name='TextQuestion',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_type', models.CharField(default='Question', max_length=100)),
                ('order_id', models.IntegerField(default=0)),
                ('description', models.CharField(max_length=512)),
                ('caption', models.CharField(max_length=255)),
                ('require', models.BooleanField(default=False)),
                ('mix_answers', models.BooleanField(default=False)),
                ('time_for_answer', models.BooleanField(default=False)),
                ('type_for_show', models.IntegerField(default=0)),
                ('title_image', models.CharField(default='', max_length=512)),
                ('resize_image', models.BooleanField(default=False)),
                ('test_mode', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('text', models.TextField(default='')),
                ('poll', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='poll.poll')),
            ],
            options={
                'verbose_name_plural': 'poll_text_questions',
                'db_table': 'poll_question_text',
            },
        ),
        migrations.CreateModel(
            name='RatingQuestion',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_type', models.CharField(default='Question', max_length=100)),
                ('order_id', models.IntegerField(default=0)),
                ('description', models.CharField(max_length=512)),
                ('caption', models.CharField(max_length=255)),
                ('require', models.BooleanField(default=False)),
                ('mix_answers', models.BooleanField(default=False)),
                ('time_for_answer', models.BooleanField(default=False)),
                ('type_for_show', models.IntegerField(default=0)),
                ('title_image', models.CharField(default='', max_length=512)),
                ('resize_image', models.BooleanField(default=False)),
                ('test_mode', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('rating', models.IntegerField(default=0)),
                ('poll', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='poll.poll')),
            ],
            options={
                'verbose_name_plural': 'poll_rating_questions',
                'db_table': 'poll_question_rating',
            },
        ),
        migrations.CreateModel(
            name='PollTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('article', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=poll.models.polltheme.file_path)),
                ('logo_name', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('logo_color_active', models.BooleanField(blank=True, default=True, null=True)),
                ('logo_bg_color', models.CharField(blank=True, max_length=7, null=True, validators=[django.core.validators.RegexValidator(regex='#([a-fA-F0-9]){3,6}')])),
                ('background_name', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('background_image', models.ImageField(blank=True, null=True, upload_to=poll.models.polltheme.file_path)),
                ('background_opacity', models.DecimalField(blank=True, decimal_places=2, default=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('is_standard', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('setting_font_family', models.CharField(blank=True, default='', max_length=255)),
                ('setting_text_color', models.CharField(blank=True, default='', max_length=255)),
                ('setting_element_color', models.CharField(blank=True, default='', max_length=255)),
                ('setting_background_color', models.CharField(blank=True, default='', max_length=255)),
                ('settings_progress_active', models.BooleanField(default=False)),
                ('poll', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='themes', to='poll.poll')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pollsthemes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Poll theme',
                'verbose_name_plural': 'Polls themes',
                'db_table': 'poll_theme',
            },
        ),
        migrations.CreateModel(
            name='PollAnalitics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='id')),
                ('avarage_age', models.FloatField(default=0, verbose_name='Avarage age')),
                ('men_total', models.PositiveIntegerField(default=0, verbose_name='Total men')),
                ('women_total', models.PositiveIntegerField(default=0, verbose_name='Total women')),
                ('women_before_18', models.PositiveIntegerField(default=0, verbose_name='Women before 18')),
                ('men_before_18', models.PositiveIntegerField(default=0, verbose_name='Men before 18')),
                ('women_in_18_24', models.PositiveIntegerField(default=0, verbose_name='Women between 18 and 24')),
                ('men_in_18_24', models.PositiveIntegerField(default=0, verbose_name='Men between 18 and 24')),
                ('women_in_25_35', models.PositiveIntegerField(default=0, verbose_name='Women between 25 and 35')),
                ('men_in_25_35', models.PositiveIntegerField(default=0, verbose_name='Men between 25 and 35')),
                ('women_in_36_45', models.PositiveIntegerField(default=0, verbose_name='Women between 36 and 45')),
                ('men_in_36_45', models.PositiveIntegerField(default=0, verbose_name='Men between 36 and 45')),
                ('women_older_46', models.PositiveIntegerField(default=0, verbose_name='Women older 46')),
                ('men_older_46', models.PositiveIntegerField(default=0, verbose_name='Men older 46')),
                ('from_desktop', models.PositiveIntegerField(default=0, verbose_name='From desktop')),
                ('from_mobile', models.PositiveIntegerField(default=0, verbose_name='From mobile')),
                ('from_other', models.PositiveIntegerField(default=0, verbose_name='From other')),
                ('poll_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='poll.poll', verbose_name='poll id')),
                ('survey_id', models.ManyToManyField(blank=True, to='poll.SurveyPassing', verbose_name='survey_id')),
            ],
            options={
                'verbose_name': 'Analitics',
                'verbose_name_plural': 'Analitics',
            },
        ),
        migrations.AddField(
            model_name='poll',
            name='tags_list',
            field=models.ManyToManyField(to='poll.PollTags'),
        ),
        migrations.CreateModel(
            name='MediaQuestion',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_type', models.CharField(default='Question', max_length=100)),
                ('order_id', models.IntegerField(default=0)),
                ('description', models.CharField(max_length=512)),
                ('caption', models.CharField(max_length=255)),
                ('require', models.BooleanField(default=False)),
                ('mix_answers', models.BooleanField(default=False)),
                ('time_for_answer', models.BooleanField(default=False)),
                ('type_for_show', models.IntegerField(default=0)),
                ('title_image', models.CharField(default='', max_length=512)),
                ('test_mode', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('description_mode', models.BooleanField(default=False)),
                ('max_video_duration', models.IntegerField(default=0)),
                ('is_video', models.BooleanField(default=False)),
                ('resize_image', models.BooleanField(default=False)),
                ('attached_type', models.ManyToManyField(to='poll.MediaAttachedType')),
                ('items', models.ManyToManyField(to='poll.MediaItemQuestion')),
                ('poll', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='poll.poll')),
            ],
            options={
                'verbose_name_plural': 'poll_media_questions',
                'db_table': 'poll_question_media',
            },
        ),
        migrations.CreateModel(
            name='ManyFromListQuestion',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_type', models.CharField(default='Question', max_length=100)),
                ('order_id', models.IntegerField(default=0)),
                ('description', models.CharField(max_length=512)),
                ('caption', models.CharField(max_length=255)),
                ('require', models.BooleanField(default=False)),
                ('mix_answers', models.BooleanField(default=False)),
                ('time_for_answer', models.BooleanField(default=False)),
                ('type_for_show', models.IntegerField(default=0)),
                ('title_image', models.CharField(default='', max_length=512)),
                ('resize_image', models.BooleanField(default=False)),
                ('test_mode', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('description_mode', models.BooleanField(default=False)),
                ('count_of_answer', models.IntegerField(default=0)),
                ('current_number_value', models.IntegerField(blank=True, default=None, null=True)),
                ('answer_from', models.IntegerField(blank=True, default=None, null=True)),
                ('answer_to', models.IntegerField(blank=True, default=None, null=True)),
                ('answer_time', models.IntegerField(default=0)),
                ('comment', models.CharField(blank=True, default=None, max_length=512, null=True)),
                ('attached_type', models.ManyToManyField(to='poll.ManyFromListAttachedType')),
                ('items', models.ManyToManyField(to='poll.ItemQuestion')),
                ('poll', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='poll.poll')),
            ],
            options={
                'verbose_name_plural': 'poll_many_from_list',
                'db_table': 'poll_question_many_from_list',
            },
        ),
        migrations.CreateModel(
            name='ItemsFreeAnswer',
            fields=[
                ('item_question_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.IntegerField(default=0)),
                ('text', models.TextField(blank=True, default='', null=True)),
                ('checked', models.BooleanField(default=False)),
                ('photo_path', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('count_of_input', models.IntegerField(blank=True, default=0, null=True)),
                ('selected', models.BooleanField(default=False)),
                ('points', models.IntegerField(blank=True, default=0, null=True)),
                ('type_answer_row', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('tags', models.ManyToManyField(to='poll.ItemTagsFreeAnswer')),
            ],
            options={
                'ordering': ['order_id', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Invitations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=200)),
                ('role', models.CharField(choices=[('redactor', 'Redactor'), ('view_responses', 'view_responses'), ('author', 'Author')], max_length=80)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='poll.poll')),
            ],
            options={
                'db_table': 'invitation_poll_access',
            },
        ),
        migrations.CreateModel(
            name='HeadingQuestion',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_type', models.CharField(default='Question', max_length=100)),
                ('caption', models.CharField(max_length=100)),
                ('order_id', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='poll.poll')),
            ],
        ),
        migrations.CreateModel(
            name='FreeAnswer',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_type', models.CharField(default='Question', max_length=100)),
                ('order_id', models.IntegerField(default=0)),
                ('description', models.CharField(max_length=512)),
                ('caption', models.CharField(max_length=255)),
                ('require', models.BooleanField(default=False)),
                ('mix_answers', models.BooleanField(default=False)),
                ('time_for_answer', models.BooleanField(default=False)),
                ('type_for_show', models.IntegerField(default=0)),
                ('title_image', models.CharField(default='', max_length=512)),
                ('resize_image', models.BooleanField(default=False)),
                ('test_mode', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('answer_time', models.IntegerField(default=0)),
                ('description_mode', models.BooleanField(default=False)),
                ('attached_type', models.ManyToManyField(to='poll.FreeAnswerAttachedType')),
                ('items', models.ManyToManyField(to='poll.ItemsFreeAnswer')),
                ('poll', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='poll.poll')),
                ('tags', models.ManyToManyField(to='poll.TagsFreeAnswer')),
            ],
        ),
        migrations.CreateModel(
            name='FinalQuestion',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_type', models.CharField(default='Question', max_length=100)),
                ('order_id', models.IntegerField(default=0)),
                ('description', models.CharField(max_length=512)),
                ('caption', models.CharField(max_length=255)),
                ('require', models.BooleanField(default=False)),
                ('mix_answers', models.BooleanField(default=False)),
                ('time_for_answer', models.BooleanField(default=False)),
                ('type_for_show', models.IntegerField(default=0)),
                ('title_image', models.CharField(default='', max_length=512)),
                ('resize_image', models.BooleanField(default=False)),
                ('test_mode', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('description_mode', models.BooleanField(default=False)),
                ('max_video_duration', models.IntegerField(default=0)),
                ('is_video', models.BooleanField(default=False)),
                ('show_my_answers', models.BooleanField(default=False)),
                ('correct_answers', models.BooleanField(default=False)),
                ('point_for_answers', models.BooleanField(default=False)),
                ('button_mode', models.BooleanField(default=False)),
                ('button_text', models.CharField(blank=True, default='', max_length=512, null=True)),
                ('button_url', models.CharField(blank=True, default='', max_length=512, null=True)),
                ('reopen', models.BooleanField(default=False)),
                ('items', models.ManyToManyField(to='poll.ItemQuestion')),
                ('poll', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='poll.poll')),
            ],
            options={
                'verbose_name_plural': 'poll_final_questions',
                'db_table': 'poll_final_question',
            },
        ),
        migrations.CreateModel(
            name='DivisionQuestion',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_type', models.CharField(default='Question', max_length=100)),
                ('order_id', models.IntegerField(default=0)),
                ('description', models.CharField(max_length=512)),
                ('caption', models.CharField(max_length=255)),
                ('require', models.BooleanField(default=False)),
                ('mix_answers', models.BooleanField(default=False)),
                ('time_for_answer', models.BooleanField(default=False)),
                ('type_for_show', models.IntegerField(default=0)),
                ('title_image', models.CharField(default='', max_length=512)),
                ('resize_image', models.BooleanField(default=False)),
                ('test_mode', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.CharField(max_length=512)),
                ('poll', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='poll.poll')),
            ],
            options={
                'verbose_name_plural': 'poll_divisions',
                'db_table': 'poll_question_division',
            },
        ),
        migrations.CreateModel(
            name='AnswerQuestion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('poll_id', models.IntegerField()),
                ('question_id', models.IntegerField()),
                ('question_type', models.CharField(default='NoType', max_length=100)),
                ('text', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('checked', models.BooleanField(blank=True, default=None, null=True)),
                ('photo_path', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('items_question', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None), blank=True, null=True, size=None)),
                ('platform', models.CharField(default='Desktop', max_length=100)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('during', models.IntegerField(blank=True, default=1, null=True)),
                ('sex', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('event', models.CharField(choices=[('NEW', 'New'), ('STARTED', 'Started'), ('INPROGRESS', 'In progress'), ('COMPLETED', 'Completed')], default='new', max_length=15)),
                ('survey', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='poll.surveypassing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'poll_answer_questions',
                'db_table': 'poll_answer_question',
            },
        ),
        migrations.AddIndex(
            model_name='yesnoquestion',
            index=models.Index(fields=['poll'], name='poll_yesnoq_poll_id_6c7adc_idx'),
        ),
        migrations.AddIndex(
            model_name='useraccess',
            index=models.Index(fields=['poll'], name='user_poll_a_poll_id_feedc1_idx'),
        ),
        migrations.AddIndex(
            model_name='textquestion',
            index=models.Index(fields=['poll'], name='poll_questi_poll_id_3772a0_idx'),
        ),
        migrations.AddIndex(
            model_name='ratingquestion',
            index=models.Index(fields=['poll'], name='poll_questi_poll_id_3ddfc5_idx'),
        ),
        migrations.AddIndex(
            model_name='poll',
            index=models.Index(fields=['owner'], name='poll_owner_i_671824_idx'),
        ),
        migrations.AddIndex(
            model_name='mediaquestion',
            index=models.Index(fields=['poll'], name='poll_questi_poll_id_1bc6e4_idx'),
        ),
        migrations.AddIndex(
            model_name='manyfromlistquestion',
            index=models.Index(fields=['poll'], name='poll_questi_poll_id_eacc7d_idx'),
        ),
        migrations.AddIndex(
            model_name='freeanswer',
            index=models.Index(fields=['poll'], name='poll_freean_poll_id_93f3cc_idx'),
        ),
        migrations.AddIndex(
            model_name='finalquestion',
            index=models.Index(fields=['poll'], name='poll_final__poll_id_135d41_idx'),
        ),
        migrations.AddIndex(
            model_name='divisionquestion',
            index=models.Index(fields=['poll'], name='poll_questi_poll_id_78dd00_idx'),
        ),
    ]
